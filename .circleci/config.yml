version: 2.1
jobs:
  plan:
    docker:
      - image: public.ecr.aws/hashicorp/terraform:latest
    working_directory: ~/project
    environment:
      BASH_ENV: /root/.bashrc
    steps:
      - checkout
      - run:
          name: terraform init and plan
          command: |
            touch $BASH_ENV            
            echo 'export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}' >> $BASH_ENV
            echo 'export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION_VALUE}' >> $BASH_ENV
            echo 'export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}' >> $BASH_ENV
            source $BASH_ENV
            terraform init tf/
            terraform plan tf/
  apply:
    docker:
      - image: public.ecr.aws/hashicorp/terraform:latest
    working_directory: ~/project
    environment:
      BASH_ENV: /root/.bashrc
    steps:
      - checkout
      - run:
          name: terraform init and plan
          command: |
            touch $BASH_ENV            
            echo 'export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}' >> $BASH_ENV
            echo 'export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION_VALUE}' >> $BASH_ENV
            echo 'export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}' >> $BASH_ENV
            source $BASH_ENV
            terraform init -lock=false tf/
            terraform apply -auto-approve tf/
  
  build_container:
    machine:
      image: ubuntu-2004:202010-01
    working_directory: ~/project
    environment:
      BASH_ENV: /root/.bashrc
    steps:
      - checkout      
      - run:
          name: build image from Dockerfile
          command: |                        
            sudo echo 'export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}' >> $BASH_ENV
            sudo echo 'export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION_VALUE}' >> $BASH_ENV
            sudo echo 'export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}' >> $BASH_ENV
            sudo source $BASH_ENV
            sudo apt-get update -y && sudo apt-get install curl unzip -y            

workflows:
  plan:
    jobs:
      - plan      
      - approve_apply:
          type: approval
          requires:
            - plan        
      - apply:
          requires:
            - approve_apply
      - build_container:
          requires:
            - apply