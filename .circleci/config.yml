version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@7.0.0
jobs: 
  plan:
    docker:
      - image: public.ecr.aws/hashicorp/terraform:latest
    working_directory: ~/project
    environment:
      BASH_ENV: /root/.bashrc
    steps:
      - checkout
      - run:
          name: terraform init and plan
          command: |
            touch $BASH_ENV            
            echo 'export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}' >> $BASH_ENV
            echo 'export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION_VALUE}' >> $BASH_ENV
            echo 'export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}' >> $BASH_ENV
            source $BASH_ENV
            terraform init tf/
            terraform plan tf/
  apply:
    docker:
      - image: public.ecr.aws/hashicorp/terraform:latest
    working_directory: ~/project
    environment:
      BASH_ENV: /root/.bashrc
    steps:
      - checkout
      - run:
          name: terraform init and plan
          command: |
            touch $BASH_ENV            
            echo 'export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}' >> $BASH_ENV
            echo 'export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION_VALUE}' >> $BASH_ENV
            echo 'export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}' >> $BASH_ENV
            source $BASH_ENV
            terraform init -lock=false tf/
            terraform apply -auto-approve tf/        

workflows:
  plan:
    jobs:
      - plan      
      - approve_apply:
          type: approval
          requires:
            - plan        
      - apply:
          requires:
            - approve_apply
      - aws-ecr/build-and-push-image:
          requires:
            - apply
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_ACCESS_KEY_ID         
          create-repo: true
          dockerfile: Dockerfile
          no-output-timeout: 20m
          path: .
          region: AWS_DEFAULT_REGION_VALUE
          repo: jm-app
          skip-when-tags-exist: false
          tag: 'latest'

      